# 기존의 2751 코드를 사용하면, 범위가 커서 시간 초과가 나온다. 또한 같은 숫자가 등장할 수도 있다.
# 그래서 또 조사를 해봤다. 이 문제의 주핵심은 1부터 9까지 나온 수를 오름차순 해야되는데 중복이 가능하다는 것이다.
# 그러면 1~9까지 각각 숫자의 중복 횟수를 세어서 그만큼 출력만 해주면된다.
# 구현을 위해 계수 정렬이라는 것을 여러 블로그를 참고해 구현해보았다.
# 다행이도 두번째 줄의 입력되는 자연수는 10000보다 작거나 같다는 조건이 있다.
# 해당 조건들에 부합하게 코드를 작성해보겠다.

import sys   # sys.stdin.readline()를 쓰기 위해 임포트 해준다.

N = int(input())        # 수의 갯수인 N개를 받는다. 
list_x = [0] * 10001    # 0 ~ 10000까지의 리스트 생성(N이 10000보다 작거나 같으므로)

# 누적합 구하기
for i in range(N):   # 인자(수) i를 N의 갯수만큼 받는다.
    input_n = int(sys.stdin.readline())  # sys.stdin.readline()를 input 대신 써준다. 
    # 해당 코드로 인자(수)를 받는다.
    list_x[input_n] += 1 # list_x에다가 입력 받은 i 인자(수)의 등장 횟수만큼 카운트를 올린다.

# 세어진 인덱스 데이터만 출력
for i in range(len(list_x)):   # list_x의 등장된 인자(수) 갯수 만큼 반복
    for _ in range(list_x[i]):   # list_x에 있는 각각의 입력된 i 인자(수)의 인덱스 갯수 호출
        print(i)  # i 인자(수) 등장 횟수만큼 i를 출력한다.
        
# 수 정렬하기 -1,2 와 비슷해보여서 금방할 줄 알았는데, 계수 정렬이라는 개념을 이해하느라 시간을 꽤 사용했다.
# 계수 정렬을 어느정도 이해해도 코드로 구현할 줄 몰라 헤멧는데, 블로그 글들을 사용해 작성해보았다. 