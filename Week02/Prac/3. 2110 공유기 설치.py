# n개의 집에 x들의 집합들로 있는데, 그 사이에 C개의 공유기를 설치해야한다.
# 공유기 간 거리를 최대한 멀리 두어 설치해야한다.
# 공유기를 설치했는데 대수가 적으면 거리를 줄인다.
# 대수가 많다면 거리를 늘린다.
# low는 최소거리, high는 가장 먼 두집의 거리
# mid값을 정해서 공유기 설치하고 집 위치는 소트로 재정렬해야한다.

# 입력단
N, C = map(int, input().split())
arr = []

for _ in range(N):      # 입력값을 배열에 넣는다.
    arr.append(int(input()))
arr.sort()

start = 1 # 공유기 거리 최소
end = arr[-1] - arr[0] # 공유기 거리 최대(마지막 집 - 첫 집)
result = 0

# 재귀로 적절한 두 공유기 사이의 거리를 찾는다
while (start <= end):
    mid = (start + end) // 2 # 현재 공유기 거리
    current = arr[0]   # 배열의 첫번째는 최근값
    count = 1   # 공유기값을 처음엔 1로 한다.

    # 공유기 설치 몇 대 할 수 있는지 체크
    for i in range(1, len(arr)):     # 집 갯수만큼 수행
        if arr[i] >= current + mid:   # 기준보다 집의 위치가 크거나 같으면
            count += 1   # 공유기 한대 증가
            current = arr[i]    # 최근 집을 업데이트
            
    # 공유기 설치 수가 목표 보다 크면 공유기 사이 거리 늘림
    if count >= C:   
        start = mid + 1   # 시작지점을 기준에서 +1하면서 오른쪽 범위로 이동 
        result = mid
        
    # 공유기 설치 수가 목표 보다 작으면 공유기 사이 거리 줄임
    else:
        end = mid - 1

print(result)

# 근데 솔직히 70퍼센트는 이해가 되는데, 그 이상 이해가 안된다...
# 해당문제는 다른 문제를 풀어보다가 다시 한번 풀어볼 예정이다.
# 머리가 과열됐는지 생각이 많은지 문제가 잘 풀리지 않는다.

