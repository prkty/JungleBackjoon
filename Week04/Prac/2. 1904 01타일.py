# 맨처음엔 어떤 식으로 반복했는지 몰랐는데, 직접 구해보면 점화식이 보인다.
# 이문제를 풀기위해선 모듈러 법칙에 따라 각각의 나누기합은 전체 나누기랑 같음을 알아야한다.
# 또한 if문을 사용하여 예외처리에 신경써야한다.
import sys

input = sys.stdin.readline

def DP(n):
    dp = [0] * (n+1)
    
    ### 오류가 발생해 해당부분을 추가하여 수정했다.
    if n == 1:
        return 1
    if n == 2:
        return 2
    ###
    
    dp[1] = 1
    dp[2] = 2
    dp[3] = 3
    
    # DP 사용
    for i in range(4,n+1):
        dp[i] = ((dp[i-1] + dp[i-2])%15746)
        
    return dp[n]

N = int(input().strip())

print(DP(N))

# 상단에 if문을 쓴이유?
# 만약, 1,2을 입력할 경우 1은 리스트가 2개여서 계산불가하고
# 2는 실제 값과 다른 값을 반환한다. (인덱스 에러)
# 3은 이론상 맞지만, 1이 리스트2개여서 오류가 난다.(n<=일시 에러 발생)
# 그래서 dp[0] = 0을 넣어도 오류가 난다.