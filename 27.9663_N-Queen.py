# 하노이 탑 자체의 규칙은 굉장히 간단하다.
# 근데 일정한 규칙이 뭔지 모르겠다.
# 먼저 옮긴 횟수 K를 구해야한다. 그래서 단계층별 옮기는 횟수를 분석해봤다.
# N당 최소이동횟수를 구해보면 수식이 2^N-1이 나옵니다.

def hanoi(n, start, end, via):
    if n == 1:
        print(start, end)  # 원판을 직접 이동
        return
    hanoi(n - 1, start, via, end)  # N-1개를 보조 기둥(via)으로 이동 해당 내용이 재귀되서 프린트가 된다.
    # 내가 여기서 이해를 잘못한게 있는데, 함수의 첫째요소가 시작점이고 둘째요소가 목적지이다. 세번째요소는 보조인셈.
    print(start, end)  # n-1을 보조지점으로 옮겼으니 가장 큰 원판을 목표 기둥(end)으로 이동하고 프린트한다.
    hanoi(n - 1, via, end, start)  # N-1개를 목표 기둥으로 이동한다. 재귀되서 프린트가 된다.
    


n = int(input())
K = ((2 ** n) -1) # 최소 이동횟수이다.

print(K)

if n <= 20:
    hanoi(n, 1, 3, 2)
    
# 해당문제를 해석하는데에만 몇시간이 걸리고 최종적으로 8시간정도 사용한 것 같다.
# 코드보면 엄청 간단해 보이는데, 이 코드 이해하는데만 한세월 걸렸고, 여러 사람에게 물어보면서 이해했다.
# 아직까지도 한 70퍼만 이해한 느낌이다. 재귀함수 부분의 개념을 더 명확히 알아봐야겠다.